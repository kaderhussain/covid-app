[{"D:\\REACT\\ReactApp\\react-test\\src\\index.js":"1","D:\\REACT\\ReactApp\\react-test\\src\\App.js":"2","D:\\REACT\\ReactApp\\react-test\\src\\components\\index.js":"3","D:\\REACT\\ReactApp\\react-test\\src\\components\\Cards\\Card.jsx":"4","D:\\REACT\\ReactApp\\react-test\\src\\components\\CountryPicker\\CountryPicker.jsx":"5","D:\\REACT\\ReactApp\\react-test\\src\\components\\Charts\\Chart.jsx":"6","D:\\REACT\\ReactApp\\react-test\\src\\api\\index.js":"7"},{"size":146,"mtime":1617615192541,"results":"8","hashOfConfig":"9"},{"size":1113,"mtime":1617619442540,"results":"10","hashOfConfig":"9"},{"size":169,"mtime":1617560442383,"results":"11","hashOfConfig":"9"},{"size":3469,"mtime":1617561386045,"results":"12","hashOfConfig":"9"},{"size":1016,"mtime":1617619584937,"results":"13","hashOfConfig":"9"},{"size":2206,"mtime":1617619509976,"results":"14","hashOfConfig":"9"},{"size":1214,"mtime":1617617623185,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"v813vf",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\REACT\\ReactApp\\react-test\\src\\index.js",[],["33","34"],"D:\\REACT\\ReactApp\\react-test\\src\\App.js",[],"D:\\REACT\\ReactApp\\react-test\\src\\components\\index.js",[],"D:\\REACT\\ReactApp\\react-test\\src\\components\\Cards\\Card.jsx",[],"D:\\REACT\\ReactApp\\react-test\\src\\components\\CountryPicker\\CountryPicker.jsx",["35"],"import React,{useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport {Fetchcountries} from '../../api'\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange})=>{\r\n    \r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const FetchApi = async()=>{\r\n            setFetchedCountries(await Fetchcountries())\r\n        }\r\n        FetchApi();\r\n    },setFetchedCountries)\r\n    console.log(fetchedCountries);\r\n\r\n    return(\r\n        \r\n       (<FormControl className={styles.formControl}>\r\n           <NativeSelect defaultValue='' onChange={(e)=>{handleCountryChange(e.target.value)}}>\r\n               <option value=\"\">Global</option>\r\n               {fetchedCountries.map((country,i)=><option\r\n               key={i}\r\n               value={country}\r\n               >{country}</option>)}\r\n           </NativeSelect>\r\n       </FormControl>)\r\n    )\r\n\r\n}\r\nexport default CountryPicker","D:\\REACT\\ReactApp\\react-test\\src\\components\\Charts\\Chart.jsx",["36"],"import React,{useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport  {Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles  from './Chart.module.css'\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths}, country})=>{\r\n\r\n    const [dailyData, setDailyData ] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async()=>{\r\n            setDailyData(await fetchDailyData());\r\n\r\n        }\r\n        fetchAPI();\r\n        console.log( dailyData.map((date)=>date));\r\n\r\n    },[])\r\n    \r\n\r\n    const lineChart =(\r\n        dailyData.length ? (\r\n            <Line\r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[\r\n                    {\r\n                        data: dailyData.map((confirmed)=>confirmed.confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill:true\r\n                    },{\r\n                        data: dailyData.map((deaths)=>deaths.deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n                        fill:true\r\n                    }\r\n                ]\r\n            }}\r\n            />\r\n        ):null\r\n    );\r\n\r\n    const BarChart = (\r\n        confirmed ?\r\n        (<Bar\r\n            data={{\r\n                labels:['Infected','Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label:'people',\r\n                    backgroundColor:[\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)'\r\n                    ],\r\n                    data:[confirmed.value,recovered.value, deaths.value]\r\n\r\n                }],\r\n            }}\r\n            options={\r\n                {\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current State in ${country}`}\r\n                }\r\n            }\r\n        ></Bar>):null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? BarChart : lineChart}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Chart","D:\\REACT\\ReactApp\\react-test\\src\\api\\index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":17,"column":7,"nodeType":"43","endLine":17,"endColumn":26},{"ruleId":"41","severity":1,"message":"44","line":19,"column":7,"nodeType":"45","endLine":19,"endColumn":9,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Identifier","React Hook useEffect has a missing dependency: 'dailyData'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [dailyData]",{"range":"52","text":"53"},[510,512],"[dailyData]"]